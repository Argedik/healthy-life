Dosya Yolu: C:/Users/enes.gedik/Desktop/fe/besin-uygulamasi/frontend/web/.dockerignore
Dosya İçeriği:
**/target

Dosya Yolu: C:/Users/enes.gedik/Desktop/fe/besin-uygulamasi/frontend/web/Cargo.toml
Dosya İçeriği:
[package]
name="web_app"
version="0.1.0"
edition="2021"

[dependencies]
# react js benzeri bir yapıya sahip wasm kullanarak tarayıcıda çalışan eklendi.
yew = { version = "0.21", features = ["csr"] }

wasm-bindgen = "0.2.99"
# Serde , Rust dilinde veri serileştirme ve seriyi çözme (deserialization) işlemlerini yapar.
serde = { version = "1.0.216", features = ["derive"]}

# Reqwasm, web tarayıcısında HTTP istekleri yapmak için kullanılan bir kütüphanedir. Fetch API'yi sarmalar ve Rust ile web tabanlı REST API çağrıları yapmanızı sağlar.
reqwasm = "0.5"
# web-sys ve wasm-bindgen sayesinde target klasörü içine wasm dosyalarımız oluşturuluyor
web-sys = { version = "0.3", features = ["Window", "Document", "Element"] }

Dosya Yolu: C:/Users/enes.gedik/Desktop/fe/besin-uygulamasi/frontend/web/Dockerfile
Dosya İçeriği:
# Rust'ın en son resmi Docker imajını kullanıyoruz.
FROM rust:latest

# Çalışma dizini
WORKDIR /app

#  WebAssembly hedefini ekliyoruz.
RUN rustup target add wasm32-unknown-unknown

# Trunk'ı kuruyoruz.
RUN cargo install trunk cargo-watch

# Bağımlılıkları önbelleğe almak için Cargo.toml ve Cargo.lock dosyalarını kopyala
COPY Cargo.toml Cargo.lock ./

# Bağımlılıkları indirme
RUN mkdir src
RUN echo "fn main() {}" > src/main.rs

#Bağımlılıkları indiriyoruz.
RUN cargo fetch

# Tüm projeyş kopyala
COPY . .

# Port açıyoruz.
EXPOSE 8080

Dosya Yolu: C:/Users/enes.gedik/Desktop/fe/besin-uygulamasi/frontend/web/index.html
Dosya İçeriği:
<!DOCTYPE html>
<html lang="tr">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<link data-trunk rel="copy-dir" href="static" />
		<link data-trunk rel="scss" href="./static/styles/index.scss" />
		<title>Besin Uygulaması</title>
	</head>
	<body>
		<div id="app"></div>
		<script type="module"></script>
	</body>
</html>
xz


Dosya Yolu: C:/Users/enes.gedik/Desktop/fe/besin-uygulamasi/frontend/web/src/components/card/card.html
Dosya İçeriği:
<div class="card">
	<div class="image-container">
		<p>Yemek resmi</p>
	</div>
	<div class="info-container">
		<p>Resim Açıklaması</p>
		<p>Puanı, Maliyeti</p>
	</div>
</div>


Dosya Yolu: C:/Users/enes.gedik/Desktop/fe/besin-uygulamasi/frontend/web/src/components/card/card.scss
Dosya İçeriği:
.card {
	width: 200px;
	background-color: teal;
	border-radius: 15px;
	overflow: hidden;
	box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
	margin: 20px auto;

	.image-container {
		height: 150px;
		display: flex;
		justify-content: center;
		align-items: center;
		background-color: #fff;

		p {
			margin: 0;
			color: #333;
			font-weight: bold;
		}
	}

	.info-container {
		padding: 15px;
		text-align: center;
		background-color: #f9f9f9;

		p {
			margin: 5px 0;
			color: #666;
			font-size: 14px;
		}
	}
}


Dosya Yolu: C:/Users/enes.gedik/Desktop/fe/besin-uygulamasi/frontend/web/src/components/card/card_view.rs
Dosya İçeriği:
use yew::prelude::*;

#[function_component(Card)]
pub fn card_view() -> Html {
    let card_container = include_str!("card.html");
    html! {
        <div>
            { Html::from_html_unchecked(card_container.into()) }
        </div>
    }
}


Dosya Yolu: C:/Users/enes.gedik/Desktop/fe/besin-uygulamasi/frontend/web/src/components/card/mod.rs
Dosya İçeriği:
pub mod card_view;
pub use card_view::Card;

Dosya Yolu: C:/Users/enes.gedik/Desktop/fe/besin-uygulamasi/frontend/web/src/components/components.scss
Dosya İçeriği:
@use './card/card.scss' as *;
@use './home_page/home_page.scss' as *;
@use './nav_bar/nav_bar.scss' as *;


Dosya Yolu: C:/Users/enes.gedik/Desktop/fe/besin-uygulamasi/frontend/web/src/components/home_page/home_page.html
Dosya İçeriği:
<div class="container">
	<!-- Sebze Meyve Fotoğrafı -->
	<img
		src="/static/images/home-page/home-page.png"
		alt="Sağlıklı Beslenme"
		class="food-image"
	/>

	<!-- Yazılar ve Çizgiler -->
	<div class="label tahil">Tahıl sonucuna göre</div>
	<div class="line tahil-line"></div>

	<div class="label dolap">Dolapta ne var?</div>
	<div class="line dolap-line"></div>

	<div class="label gunluk-menu">Günün Menüsü</div>
	<div class="line gunluk-menu-line"></div>

	<div class="label ozel-ogun">Özel öğün beslenmesi</div>
	<div class="line ozel-ogun-line"></div>

	<div class="label saglikli-diyet">Sağlıklı diyetler</div>
	<div class="line saglikli-diyet-line"></div>

	<div class="title">SAĞLIK, DOĞRU BESLENMEYLE BAŞLAR.</div>
</div>


Dosya Yolu: C:/Users/enes.gedik/Desktop/fe/besin-uygulamasi/frontend/web/src/components/home_page/home_page.rs
Dosya İçeriği:
use yew::prelude::*;
  // <div class={css!("color: blue;")}>{"Hello blue!"}</div

#[function_component(HomePage)]
pub fn home_page_component() -> Html {
  let html_content = include_str!("home_page.html"); 

  html! {
      <div>
          { Html::from_html_unchecked(html_content.into()) }
      </div>
  }
}

Dosya Yolu: C:/Users/enes.gedik/Desktop/fe/besin-uygulamasi/frontend/web/src/components/home_page/home_page.scss
Dosya İçeriği:
.container {
	position: relative;
	width: 500px; /* Görselin boyutuna göre ayarlayın */
	height: 500px;
	margin: auto;

	.food-image {
		width: 100%;
		border-radius: 50%; /* Daire şeklinde yapar */
		border: 2px solid #2e8b57;
	}

	.label {
		position: absolute;
		background-color: #fff;
		padding: 5px 10px;
		border-radius: 5px;
		font-weight: bold;
		color: #01303b;
	}

	/* Label Pozisyonları */
	.tahil {
		top: 10%;
		left: 60%;
	}
	.dolap {
		top: 20%;
		left: 10%;
	}
	.gunluk-menu {
		top: 40%;
		left: 5%;
	}
	.ozel-ogun {
		bottom: 20%;
		left: 10%;
	}
	.saglikli-diyet {
		bottom: 5%;
		left: 40%;
	}

	/* Çizgiler */
	.line {
		position: absolute;
		width: 50px;
		height: 2px;
		background-color: #2e8b57;
	}

	.tahil-line {
		top: 15%;
		left: 50%;
		transform: rotate(45deg);
	}
	.dolap-line {
		top: 25%;
		left: 20%;
	}
	.gunluk-menu-line {
		top: 45%;
		left: 15%;
	}
	.ozel-ogun-line {
		bottom: 25%;
		left: 20%;
	}
	.saglikli-diyet-line {
		bottom: 10%;
		left: 45%;
	}

	.title {
		position: absolute;
		bottom: 10%;
		left: 20%;
		font-size: 20px;
		color: #01303b;
		text-align: center;
		font-weight: bold;
	}
}


Dosya Yolu: C:/Users/enes.gedik/Desktop/fe/besin-uygulamasi/frontend/web/src/components/home_page/mod.rs
Dosya İçeriği:
pub mod home_page;
pub use home_page::HomePage;

Dosya Yolu: C:/Users/enes.gedik/Desktop/fe/besin-uygulamasi/frontend/web/src/components/mod.rs
Dosya İçeriği:
pub mod nav_bar;
pub mod home_page;
pub mod card;

pub use nav_bar::NavBar;
pub use home_page::HomePage;
pub use card::Card;


Dosya Yolu: C:/Users/enes.gedik/Desktop/fe/besin-uygulamasi/frontend/web/src/components/nav_bar/mod.rs
Dosya İçeriği:
pub mod nav_bar;
pub use nav_bar::NavBar;

Dosya Yolu: C:/Users/enes.gedik/Desktop/fe/besin-uygulamasi/frontend/web/src/components/nav_bar/nav_bar.html
Dosya İçeriği:


Dosya Yolu: C:/Users/enes.gedik/Desktop/fe/besin-uygulamasi/frontend/web/src/components/nav_bar/nav_bar.rs
Dosya İçeriği:
use yew::prelude::*;

#[function_component(NavBar)]
pub fn nav_bar_component() -> Html {
  html! {
    <nav>
      <ul>
        <li>
          <a href="/"> {"Ana Sayfa"} </a>
        </li>
        <li>
          <a href="/stats"> {"İstatistikler"} </a>
        </li>
      </ul>
    </nav>
  }
}

Dosya Yolu: C:/Users/enes.gedik/Desktop/fe/besin-uygulamasi/frontend/web/src/components/nav_bar/nav_bar.scss
Dosya İçeriği:


Dosya Yolu: C:/Users/enes.gedik/Desktop/fe/besin-uygulamasi/frontend/web/src/main.rs
Dosya İçeriği:
use yew::prelude::*;
mod components;

use components::{NavBar, HomePage, Card};

#[function_component(App)]
fn app() -> Html {
  html! {
    <>
      <NavBar />
      <HomePage />
      <Card />
    </>
  }
}

fn main() {
  yew::Renderer::<App>::new().render();
}

Dosya Yolu: C:/Users/enes.gedik/Desktop/fe/besin-uygulamasi/frontend/web/static/images/home-page/home-page.png
Dosya İçeriği:
Dosya okunamadı veya metin dosyası değil.

Dosya Yolu: C:/Users/enes.gedik/Desktop/fe/besin-uygulamasi/frontend/web/static/styles/index.scss
Dosya İçeriği:
@use './_variables' as *;
@use './_mixins' as *;
@use './_globals' as *;
@use './typography' as *;

@use '../../src/components/components.scss' as *;


Dosya Yolu: C:/Users/enes.gedik/Desktop/fe/besin-uygulamasi/frontend/web/static/styles/_globals.scss
Dosya İçeriği:
@use './_variables' as *;
@use './_mixins' as *;
@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap');

* {
	box-sizing: border-box;
	padding: 0;
}

html {
	font-size: 16px; // 1rem = 16px

	@include respond-to(sm) {
		font-size: 15px;
	}

	@include respond-to(xs) {
		font-size: 14px;
	}
}

body {
	line-height: 1.5;
	font-family: 'Poppins', sans-serif;
	color: $craft-color;
	background-color: transparent;
	margin: 0;
	padding: 0;
}


Dosya Yolu: C:/Users/enes.gedik/Desktop/fe/besin-uygulamasi/frontend/web/static/styles/_mixins.scss
Dosya İçeriği:
@use './_variables' as *;
@use 'sass:map';

@mixin flexCenter {
	display: flex;
	justify-content: center;
	align-items: center;
}

@mixin respond-to($breakpoint) {
	$breakpoints: (
		xs: $breakpoint-xs,
		sm: $breakpoint-sm,
		md: $breakpoint-md,
		lg: $breakpoint-lg,
	);
	@if $breakpoint == xs {
		@media (max-width: $breakpoint-xs) {
			@content;
		}
	} @else if $breakpoint == sm {
		@media (max-width: $breakpoint-sm) {
			@content;
		}
	} @else if $breakpoint == md {
		@media (max-width: $breakpoint-md) {
			@content;
		}
	} @else if $breakpoint == lg {
		@media (max-width: $breakpoint-lg) {
			@content;
		}
	}

	@media (max-width: map.get($breakpoints, $breakpoint)) {
		@content;
	}
}


Dosya Yolu: C:/Users/enes.gedik/Desktop/fe/besin-uygulamasi/frontend/web/static/styles/_typography.scss
Dosya İçeriği:
h1,
h2,
h3 {
	font-weight: 700;
}

p {
	line-height: 1.6;
	font-size: 1rem;
}


Dosya Yolu: C:/Users/enes.gedik/Desktop/fe/besin-uygulamasi/frontend/web/static/styles/_variables.scss
Dosya İçeriği:
$light-blue: #add8e6;
$sky-blue: #87ceeb;
$cobalt-blue: #0047ab;
$royal-blue: #4169e1;
$navy: #000080;
$sea-blue: #2e8b57;
$teal: #008080;
$turquoise: #40e0d0;
$dark-blue: #00008b;
$craft-color: #01303b;
$craft-white: #fff;

$breakpoint-xs: 576px; // X-Small devices (portrait phones)
$breakpoint-sm: 768px; // Small devices (landscape phones)
$breakpoint-md: 992px; // Medium devices (tablets)
$breakpoint-lg: 1200px; // Large devices (desktops)


Dosya Yolu: C:/Users/enes.gedik/Desktop/fe/besin-uygulamasi/frontend/web/Trunk.toml
Dosya İçeriği:
[build]
# cargo trunk ya da trunk serve ile proje başlatıldığında oluşturulacak klasör ve dosyaların kaydedileceği dizin
output = "dist"
watcher_ignore = [
    "dist/*",       # trunk'ın kendi build çıktıları
    "target/*",     # Rust'ın derleme çıktıları
    ".git/*",       # Git dosyaları
    "Dockerfile",   # Docker dosyaları
    "docker-compose.yml" # Compose dosyaları
]

# trunk serve komutunun 127.0.0.1 adresinde ve 8080 portunda çalışmasını sağlıyoruz
[serve]
addresses = ["127.0.0.1"]
port = 8080

# [[copy]]
# source = "static"
# dest = "."

Dosya Yolu: C:/Users/enes.gedik/Desktop/fe/besin-uygulamasi/frontend/web/versel.json
Dosya İçeriği:
{
	"rewrites": [
		{
			"source": "/pkg/:path*",
			"destination": "/pkg/:path*"
		},
		{
			"source": "/:path*",
			"destination": "/index.html"
		}
	]
}


Dosya Yolu: C:/Users/enes.gedik/Desktop/fe/besin-uygulamasi/frontend/web/webpack.config.js
Dosya İçeriği:
const path = require('path');

module.exports = {
	resolve: {
		alias: {
			'@images': path.resolve(__dirname, 'static/images'),
		},
	},
};


